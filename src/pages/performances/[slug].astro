---
import Layout from "../../layouts/Layout.astro";
import Screen from "../../components/Screen.astro";
import Soundcloud from "../../components/Soundcloud.astro";
import ExtraImages from "../../components/ExtraImages.astro";
import Video from "../../components/Video.astro";
import { useSanityClient } from "astro-sanity";
import SanityPortableText from "../../components/SanityPortableText.astro";
import type { SanityImg } from "../../lib/types";

interface Props {
  title: string;
  slug: {
    current: string;
  };
  date?: string;
  image?: SanityImg;
  extra_images?: SanityImg[];
  details?: any;
}
export async function getStaticPaths() {
  interface Work {
    slug: {
      current: string;
    };
  }
  const query = /* groq */ `*[_type == "performance"] {
    slug,
    title,
    date,
    image{asset->{metadata{dimensions}, url}},
    details[],
    extra_images[]{asset->{metadata{dimensions}, url}}
  } | order(date desc)`;
  const allWorks: Work[] = await useSanityClient().fetch(query);
  return allWorks.map((work) => ({
    params: { slug: work.slug.current },
    props: work,
  }));
}
const { title, image, details, extra_images } = Astro.props;
---

<Layout title={title} description="">
  <Screen className={`mt-40 text-gray-500`}>
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 pb-40">
      <div class="">
        <h1 class="text-4xl font-bold">{title}</h1>
        <div class="sanity-prose">
          <SanityPortableText portableText={details} />
        </div>
      </div>
      <div>
        {
          extra_images ? (
            <ExtraImages extra_images={extra_images} />
          ) : (
            <img
              src={image?.asset.url}
              alt={title}
              width={image?.asset.metadata.dimensions.width}
              height={image?.asset.metadata.dimensions.height}
            />
          )
        }
      </div>
    </div>
  </Screen>
</Layout>
